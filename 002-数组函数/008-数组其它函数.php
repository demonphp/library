<?php

$arr = range(0,5);                   //创建一个包含指定范围单元的数组
//Array ( [0] => 0 [1] => 1 [2] => 2 [3] => 3 [4] => 4 [5] => 5 )

$arr = [1=>1,'a'=>1,'b'=>1,'c'=>2,'d'=>2,2=>2];
$arr = array_unique($arr);           //移除数组中重复的值，新的数组中会保留原始的键名,保存第一个下标
//Array ( [1] => 1 [c] => 2 )

$arr = ['a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>['a'=>1,'b'=>2]];
$arr = array_reverse($arr,true);     //返回一个单元顺序与原数组相反的数组，如果第二个参数为TRUE保留原来的键名,FALSE只对数组下标进行重置
//Array ( [e] => Array ( [a] => 1 [b] => 2 ) [d] => 4 [c] => 3 [b] => 2 [a] => 1 )
$arr = [1 =>1, 2=>2, 3 =>3,'a'=>1];
$arr = array_reverse($arr,false);     //FALSE只对数组下标进行重置
//Array ( [a] => 1 [0] => 3 [1] => 2 [2] => 1 )


$a=array("red","green","blue","yellow","brown");
$random_keys=array_rand($a,3);           //从数组中随机取出一个或 多个元素,取出的是下标
echo $a[$random_keys[0]]."<br>";
echo $a[$random_keys[1]]."<br>";
echo $a[$random_keys[2]]."<br>";

$arr = ['a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>['a'=>1,'b'=>2]];
shuffle($arr);                       //将数组的顺序打乱,并重置下标
//Array ( [0] => Array ( [a] => 1 [b] => 2 ) [1] => 2 [2] => 1 [3] => 3 [4] => 4 )


/*  数组合并
 *  +：保存第一个数组的所有元素，如果后面的数组的元素与前面数组的元素的下标相同，
 *     那么就忽略，如果不同则加到第一个数组里，最终返回一个数组
 *	array_merge()：先保留第一个数组的所有元素，如果后面数组的元素与前面数组的元素
 *     关联下标相同则用后面数组的元素覆盖前面的；如果是索引下标，直接添加到第一个数组后面，重置索引。
 */
$arr1 = range(1,9);
$arr2 = range('a','z');
//var_dump($arr1 + $arr2);            //26个元素
//var_dump(array_merge($arr1,$arr2)); //35个元素

/*
 * 数组与字符串之间的转换
    explode：将字符串按照指定的分隔符分解成一系列小的字符串，都成为数组的一个元素
    implode：将一个数组里的所有的元素按照某个分隔符进行拼接，变成一个字符串
 */
$arr = ['黑猫','白狗','小猪'];

$str = implode('|',$arr);
//string(20) "黑猫|白狗|小猪"
$arr = explode('|',$str);
//array(3) { [0]=> string(6) "黑猫" [1]=> string(6) "白狗" [2]=> string(6) "小猪" }


